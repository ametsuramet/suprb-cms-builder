<?php

namespace DummyNamespace;

use App\Models\{{DummyModel}};
use App\Http\Controllers\Controller;
use App\Http\Requests\{{DummyModel}}ApiCreateRequest;
use App\Http\Requests\{{DummyModel}}ApiUpdateRequest;
use Illuminate\Http\Request;
use App\Http\Resources\{{DummyModel}} as {{DummyModel}}Single;
use App\Http\Resources\{{DummyModel}}Collection;

class DummyClass extends Controller
{
    public ${{name}};

    public function __construct({{DummyModel}} ${{name}})
    {
        $this->{{name}} = ${{name}};
    }
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
        return new {{DummyModel}}Collection($this->{{name}}->paginate());
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        abort(404);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store({{DummyModel}}ApiCreateRequest $request)
    {
        try {
            $this->{{name}}->create($request->all());
            return response()->json(["message" => "success"]);
        } catch (\Exception $e) {
            return response()->json(["message" => "failed"], 400);
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        return new {{DummyModel}}Single($this->{{name}}->findOrFail($id));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        abort(404);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update({{DummyModel}}ApiUpdateRequest $request, $id)
    {
        $this->{{name}} = $this->{{name}}->findOrFail($id);
        try {
            $this->{{name}}->update($request->all());
            return response()->json(["message" => "success"]);
        } catch (\Exception $e) {
            return response()->json(["message" => "failed"], 400);
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        try {
            $this->{{name}}->destroy($id);
            return response()->json(["message" => "success"]);
        } catch (\Exception $e) {
            return response()->json(["message" => "failed"], 400);
        }
    }
}
